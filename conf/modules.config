/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: GTF_FILTER_TPM {
        publishDir = [
            path: { "${params.outdir}/filtered_gtf" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: 'STRINGTIE_MERGE' {
        ext.args = '-T 1'
    }  

    withName: 'GFFREAD' {
        ext.args = '-W -F -w'
    }

    withName: 'HMMER_HMMPRESS' {
        cpus = 1
        memory = { check_max( 8.GB * task.attempt, 'memory' ) }
        time = { check_max( 2.h * task.attempt, 'time' ) }
        errorStrategy = { task.exitStatus in [140,141,143,137,124] ? 'retry' : 'finish' }
        maxRetries = 2
    }

    withName: 'HMMER_HMMSEARCH' {
        cpus = { check_max( 8 * task.attempt, 'cpus' ) }
        memory = { check_max( 32.GB * task.attempt, 'memory' ) }
        time = { check_max( 8.h * task.attempt, 'time' ) }
        errorStrategy = { task.exitStatus in [140,141,143,137,124] ? 'retry' : 'finish' }
        maxRetries = 2
        publishDir = [
            path: { "${params.outdir}/hmmer" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        
        ext {
            args = '-E 1e-10'
        }
    }
   
}
